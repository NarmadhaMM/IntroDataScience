x <- 1 + 2*(i-1)
y1 <- d$admit[x]/d$applications[x]
y2 <- d$admit[x+1]/d$applications[x+1]
lines( c(x,x+1) , c(y1,y2) , col=rangi2 , lwd=2 )
text( x+0.5 , (y1+y2)/2 + 0.05 , d$dept[x] , cex=0.8 , col=rangi2 )
}
d$dept_id <- coerce_index( d$dept )
# 对于每个院系拟合单独的截距
m10.8 <- map(
alist(
admit ~ dbinom( applications , p ) ,
logit(p) <- a[dept_id] ,
a[dept_id] ~ dnorm(0,10)
) , data=d )
# 加上male这个变量再次拟合模型
m10.9 <- map(
alist(
admit ~ dbinom( applications , p ) ,
logit(p) <- a[dept_id] + bm*male ,
a[dept_id] ~ dnorm(0,10) ,
bm ~ dnorm(0,10)
) , data=d )
compare( m10.6 , m10.7 , m10.8 , m10.9 )
precis( m10.9 , depth=2 )
bookdown::render_book("index.Rmd", "bookdown::gitbook")
rsq <- read.csv("/Data/ResponseError.csv")
rsq <- read.csv("Data/ResponseError.csv")
rsq <- read.csv("Data/ResponseError.csv")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
rsq <- read.csv("Data/ResponseError.csv")
selectId <- maxDissim(start, samplePool, obj = minDiss, n = 5)
install.packages("proxy")
selectId <- maxDissim(start, samplePool, obj = minDiss, n = 5)
minDissSet <- samplePool[selectId, ]
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
warnings()
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
cust.df <- read.csv("http://goo.gl/PmPkaG")
str(cust.df)
#find columns with missing values
colSums(is.na(cust.df))
#replace missing satisfaction service/selection values with mean
cust.df$sat.service[is.na(cust.df$sat.service)] = round (mean(cust.df$sat.service, na.rm = TRUE))
cust.df$sat.selection[is.na(cust.df$sat.selection)] = round (mean(cust.df$sat.selection, na.rm = TRUE))
#change email into a binary variable
#Make two new columns 'total.spend' that contains a sum of online and store spending for each customer,
#total.trans that is the sum of online.trans and store.trans
#and average spending ammount by customers: online and instore
table(cust.df$email)
cust.df<- cust.df %>% mutate(email = ifelse(email == "yes",1,0))
cust.df<- cust.df %>% mutate(total.spend = (online.spend + store.spend)) %>%
mutate(total.trans = (online.trans+store.trans))
plot(jitter(cust.df$sat.service), jitter(cust.df$sat.selection),
xlab="Customer Satisfaction with Service",
ylab="Customer Satisfaction with Selection",
main="Customers as of June 2014")
hist(cust.df$total.spend)
describe(cust.df)
hist(log(cust.df$total.spend))
385/455
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
2.98*12
2.08*12
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
source("https://raw.githubusercontent.com/happyrabbit/CE_JSM2017/master/Rcode/00-course-setup.R")
sim.dat$age[which(sim.dat$age>100)]<-NA
sim.dat$store_exp[which(sim.dat$store_exp<0)]<-NA
# see the results
summary(subset(sim.dat,select=c("age","income")))
# save the result as another object
demo_imp<-impute(sim.dat,method="median/mode")
# check the first 5 columns, there is no missing values in other columns
summary(demo_imp[,1:5])
imp<-preProcess(sim.dat,method="medianImpute")
demo_imp2<-predict(imp,sim.dat)
summary(demo_imp2[,1:5])
imp<-preProcess(sim.dat,method="knnImpute",k=5)
# need to use predict() to get KNN result
demo_imp<-predict(imp,sim.dat)
summary(demo_imp)
0.8^2+0.8^4+0.8^2-0.2*0.8^5
(0.8^2+0.8^4+0.8^2-0.2*0.8^5)/3
(0.8^1+0.8^3+0.8^2-0.2*0.8^4)/3
17/4
5/1.6
36/19*31
source('~/.active-rstudio-document', echo=TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
<<<<<<< HEAD
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
getwd()
install.packages("googlesheets")
?googlesheets::gs_url
tt = googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1dY8wETaUkBbiOylwkPYOlg6LnDJa2f_xDy9jpt1opQ0/edit#gid=0")
tt = googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1dY8wETaUkBbiOylwkPYOlg6LnDJa2f_xDy9jpt1opQ0/edit#gid=0")
tt = googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1dY8wETaUkBbiOylwkPYOlg6LnDJa2f_xDy9jpt1opQ0/edit?usp=sharing")
tt = googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1dY8wETaUkBbiOylwkPYOlg6LnDJa2f_xDy9jpt1opQ0/edit?usp=sharing")
tt = googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1dY8wETaUkBbiOylwkPYOlg6LnDJa2f_xDy9jpt1opQ0/edit?usp=sharing")
6500*12
7000*12
=======
>>>>>>> 08a9ea43827300d8f05b15819a9c9cc5e56cec26
17500*0.73
5100*12
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
c(1.59,1.45)/sum(c(1.59,1.45))
bookdown::render_book("index.Rmd", "bookdown::gitbook")
plotly::subplot()
plotly::subplot
1/12
NetlifyDS::impute_dat
devtools::install_github("hrbrmstr/slackr")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
sqrt(4)
20/70
20/70*80
20/70*90
67/94
166*0.3
require(RCurl)
u <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vT5o04RE2sSqFGbA_iyhjAUYDE3TpGXzQMjyBrMvHUk1RpSDJ22SB0F7SLMoqXim5hn733oHYYsok0s/pub?gid=0&single=true&output=csv"
tc <- getURL(u, ssl.verifypeer=FALSE)
net <- read.csv(textConnection(tc))
View(net)
g <- readGoogleSheet(u)
install.packages("googlesheet")
library(googlesheet)
?getURL
tc <- getURL(u, ssl.verifypeer=FALSE, .encoding = "CE_UTF8")
net <- read.csv(textConnection(tc))
View(net)
# Budget
closing_cost = 334014
deposit = 22440
month_pay = 2453
hoa = 557
tax = 748000 * 0.0116/12
# Monthly life cost here in bay area
month_house = month_pay + hoa + tax
still_need = closing_cost - deposit
month_house
hoa + tax
month_house/7000
month_house/10000
# Aug 1
coming = 568*2 + 3500*5
coming
cash_now + from_parents + coming - still_need
cash_now = 356169
from_parents = 25000
# Aug 1
coming = 568*2 + 3500*5
cash_now + from_parents + coming - still_need
cash_now = 356169
from_parents = 25000
# Aug 1
coming = 568*2 + 3500*5
cash_now + from_parents + coming - still_need
1156 + 1500 + 100
50*4
50*4 + 150 + 51 + 36 + 30
50*4 + 150 + 51 + 36 + 30 + 200
50*4 + 150 + 51 + 36 + 30 + 100
2*17500
4*17500
7000*12
7000*12 - 30000
(7000*12 - 30000)*3
(7000*12 - 30000)*7
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
36.99*7
2500*12
5.86*20000
6*20000
6*17500
40*7
20*7
5.86/7
formatR::tidy_app()
sim.dat <- read.csv("https://raw.githubusercontent.com/happyrabbit/DataScientistR/master/Data/SegData.csv ")
summary(sim.dat)
head(sim.dat)
head(sim.dat)
str(sim.dat)
summary(sim.dat)
formatR::tidy_app()
# set problematic values as missings
sim.dat$age[which(sim.dat$age > 100)] <- NA
sim.dat$store_exp[which(sim.dat$store_exp < 0)] <- NA
# see the results
summary(subset(sim.dat, select = c("age", "income")))
demo_imp<-impute(sim.dat,method="median/mode")
# check the first 5 columns, there is no missing values in other columns
summary(demo_imp[,1:5])
formatR::tidy_app()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
4/7*3
4/7*30
10*7/4
24791*8
(24791+70000/48)*8
(24791+70000/48)*8
25000*8
25000*8
10/3.14
12/3.14
formatR::tidy_app()
library(rpart)
library(tree)
dat <- subset(dat, store_exp > 0 & online_exp > 0)
dat <- read.csv("/Users/happyrabbit/Documents/GitHub/DataScientistR/Data/SegData.csv")
# library(tree)
dat <- read.csv("http://bit.ly/2P5gTw4")
View(dat)
# data cleaning: delete wrong observations
dat <- subset(dat, store_exp > 0 & online_exp > 0)
# use the 10 survey questions as predictors
trainx <- dat[, grep("Q", names(dat))]
trainy <- dat$store_exp + dat$online_exp
set.seed(100)
rpartTune <- train(trainx, trainy, method = "rpart2", tuneLength = 10,
trControl = trainControl(method = "cv"))
library(caret)
trainy <- dat$store_exp + dat$online_exp
set.seed(100)
rpartTune <- train(trainx, trainy, method = "rpart2", tuneLength = 10,
trControl = trainControl(method = "cv"))
plot(rpartTune)
rpartTree <- rpart(trainy ~ ., data = trainx, maxdepth = 2)
print(rpartTree)
library(partykit)
install.packages("partykit")
library(partykit)
install.packages("partykit")
library(partykit)
rpartTree2 <- as.party(rpartTree)
plot(rpartTree2)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
set.seed(100)
rpartTune1 <- caret::train(trainx1, trainy, method = "rpart",
tuneLength = 30,
metric = "ROC",
trControl = trainControl(method = "cv",
summaryFunction = twoClassSummary,
classProbs = TRUE,
savePredictions = TRUE))
library(caret)
library(pROC)
dat <- read.csv("http://bit.ly/2P5gTw4")
# use the 10 survey questions as predictors
trainx1 <- dat[, grep("Q", names(dat))]
# add a categorical predictor
# use two ways to treat categorical predictor
# trainx1: use approach 1, without encoding
trainx1$segment <- dat$segment
# trainx2: use approach 2, encode it to a set of dummy variables
dumMod<-dummyVars(~.,
data=trainx1,
# Combine the previous variable name and the level name
# as the new dummy variable name
levelsOnly=F)
trainx2 <- predict(dumMod,trainx1)
# the response variable is gender
trainy <- dat$gender
set.seed(100)
rpartTune1 <- caret::train(trainx1, trainy, method = "rpart",
tuneLength = 30,
metric = "ROC",
trControl = trainControl(method = "cv",
summaryFunction = twoClassSummary,
classProbs = TRUE,
savePredictions = TRUE))
rpartTune1
25*2
1.5*25
7*25
bookdown::render_book("index.Rmd", "bookdown::gitbook")
rpartTune2 <- caret::train(trainx2, trainy, method = "rpart",
tuneLength = 30,
metric = "ROC",
trControl = trainControl(method = "cv",
summaryFunction = twoClassSummary,
classProbs = TRUE,
savePredictions = TRUE))
rpartRoc <- roc(response = rpartTune1$pred$obs,
predictor = rpartTune1$pred$Female,
levels = rev(levels(rpartTune1$pred$obs)))
rpartFactorRoc <- roc(response = rpartTune2$pred$obs,
predictor = rpartTune2$pred$Female,
levels = rev(levels(rpartTune1$pred$obs)))
plot(rpartRoc, type = "s", print.thres = c(.5),
print.thres.pch = 3,
print.thres.pattern = "",
print.thres.cex = 1.2,
col = "red", legacy.axes = TRUE,
print.thres.col = "red")
plot(rpartFactorRoc,
type = "s",
add = TRUE,
print.thres = c(.5),
print.thres.pch = 16, legacy.axes = TRUE,
print.thres.pattern = "",
print.thres.cex = 1.2)
legend(.75, .2,
c("Grouped Categories", "Independent Categories"),
lwd = c(1, 1),
col = c("black", "red"),
pch = c(16, 3))
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
3000/90
3000/90/4
90*4
14*40
145 *1.15+200/4
135+70/4*7.5
320/4
135+70/4*10
189*200
189000*200
70/4*10
70/4*25
1.9/0.06
8250/0.06
800000 - 385000
80-38.5
4048.56*2/12
4048.56*2/12+230
4048.56*2/12+230+1650
1624 + 8000/12 + 230 + 50 + 59
1624 + 8000/12 + 230 + 50 + 59 + 550/12
1624 + 8000/12 + 230 + 50 + 59 + 550/12 + 50 + 60
1750 * 2
1750 * 2 - 2700
268+18.94 + 18
368+18.94 + 18
368+18.94 + 18 + 750
10.56 + 15 + 15 +10.08
14.16 + 9.2 + 21.44
14.16 + 9.2 + 21.44 + 10.56 + 15 + 15 +10.08
3.27 + 4.36 + 11.69 + 18 + 18.94 + 368
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
load("../../../Dropbox/Book_DS/Data/rfTune.RData")
rfTune
library(randomForest)
rfit = randomForest(trainy ~ ., trainx, mtry = 1, ntree = 1000)
importance(rfit)
varImpPlot(rfit)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
6*13500
13500/4
13500/4 * 1.9
13500/4
13500/4 * (6.9 - 1.9)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
2018-35
bookdown::render_book("index.Rmd", "bookdown::gitbook")
load("../../../Dropbox/Book_DS/Data/gbmTune.RData")
load("../../../Dropbox/Book_DS/Data/gbmTune.RData")
# only show part of the output
gbmTune
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
formatR::tidy_app()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
0.36*124
120/0.36
4048.56/6+1624+230
4048.56/6+1624+230 + 59 +50
4048.56/6+1624+230 + 59 +50 + 580/12
bookdown::render_book("index.Rmd", "bookdown::gitbook")
716/4
716/4 + 135
(716/4 + 135)/0.8
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
1380+150+1000
1380+150+974
19000 + 8000 + 9000
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
warnings()
dat <- read.csv("http://bit.ly/2P5gTw4")
# data cleaning: delete wrong observations since expense can't be negative
dat <- subset(dat, store_exp > 0 & online_exp > 0)
# get predictors
trainx <- dat[ , grep("Q", names(dat))]
# get response
trainy <- dat$store_exp + dat$online_exp
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(caret)
dat <- read.csv("http://bit.ly/2P5gTw4")
# data cleaning: delete wrong observations since expense can't be negative
dat <- subset(dat, store_exp > 0 & online_exp > 0)
# get predictors
trainx <- dat[ , grep("Q", names(dat))]
# get response
trainy <- dat$store_exp + dat$online_exp
ctrl <- trainControl(method = "cv", number = 10)
# set the parameter range
ridgeGrid <- data.frame(.lambda = seq(0, .1, length = 20))
set.seed(100)
ridgeRegTune <- train(trainx, trainy,
method = "ridge",
tuneGrid = ridgeGrid,
trControl = ctrl,
## center and scale predictors
preProc = c("center", "scale"))
bookdown::render_book("index.Rmd", "bookdown::gitbook")
plot(ridgeRegTune)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
p_needed <- c('imputeMissings','caret','e1071','psych','car','corrplot')
packages <- rownames(installed.packages())
p_to_install <- p_needed[!(p_needed %in% packages)]
if (length(p_to_install) > 0) {
install.packages(p_to_install)
}
lapply(p_needed, require, character.only = TRUE)
p_needed <- c('caret', 'elasticnet', 'glmnet', 'devtools')
packages <- rownames(installed.packages())
p_to_install <- p_needed[!(p_needed %in% packages)]
if (length(p_to_install) > 0) {
install.packages(p_to_install)
}
lapply(p_needed, require, character.only = TRUE)
install.packages('glmnet')
dat <- read.csv("http://bit.ly/2KXb1Qi")
trainx = dplyr::select(dat, -y)
trainy = dat$y
fit <- glmnet(as.matrix(trainx), trainy, family = "binomial")
library(glmnet)
dat <- read.csv("http://bit.ly/2KXb1Qi")
trainx = dplyr::select(dat, -y)
trainy = dat$y
fit <- glmnet(as.matrix(trainx), trainy, family = "binomial")
plot(fit, xvar = "dev")
iris
768 + 179
230855/214584
214584/194068
3000/60
2500/60
2000/60
